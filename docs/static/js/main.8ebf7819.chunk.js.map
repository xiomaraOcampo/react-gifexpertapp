{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAERC,mBAAU,IAFF,mBAEpCC,EAFoC,KAEzBC,EAFyB,KAoB3C,OACI,sBAAMC,SAbM,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAQV,SAEI,uBACIO,KAAO,OACPC,MAAOT,EACPU,SAtBU,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEgCC,UAAUH,GAF1C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVrB,kBAebM,GAfa,4CAAH,sDCARO,EAAa,SAAC,GAAe,IAAdH,EAAa,EAAbA,MAAMV,EAAO,EAAPA,IAG9B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAMN,IACvB,4BAAIA,QCFHO,EAAU,SAAC,GAAe,IAAdnB,EAAa,EAAbA,SAAa,ECFX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC9BqB,KAAK,GACLa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAqBrC,OAdDC,qBAAU,WAENxB,EAASC,GACNwB,MAAK,SAAAC,GAECH,EAAU,CACNf,KAAKkB,EACLL,SAAQ,SAKvB,CAACpB,IAEKqB,EDhBsBK,CAAa1B,GAA9Ba,EAHsB,EAG3BN,KAAYa,EAHe,EAGfA,QASnB,OACI,qCACI,oBAAIJ,UAAY,oCAAhB,SAAqDhB,IAClDoB,GAAW,mBAAGJ,UAAW,mCAAd,qBAGd,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADEA,EAAIC,aEzBrBgB,EAAe,WAAM,IAAD,EAGKzC,mBAAS,CAAE,cAHhB,mBAGxB0C,EAHwB,KAGb3C,EAHa,KAO7B,OACG,gCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEO2C,EAAWnB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAECA,SAAWA,GADLA,YCdzB6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.8ebf7819.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) =>{\r\n\r\n    const [inputValue,setInputValue] = useState ('');\r\n\r\nconst handleInputChange = (e) =>{\r\n    setInputValue (e.target.value);\r\n}\r\n\r\nconst handleSubmit =(e) =>{\r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim().length >2 ){\r\n    setCategories(cats => [inputValue,...cats]);\r\n    setInputValue('');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit ={ handleSubmit}>\r\n            \r\n            <input\r\n                type = 'text'\r\n                value={inputValue}\r\n                onChange= {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n export const getGifs = async(category) =>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=H4aWfzeNEtPnInul3aM7e1BM1NS95gki`\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map (img =>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport const GifGridItem =({title,url})=>{\r\n\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src = {url} alt ={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) =>{\r\n\r\n  \r\n    const {data:images,loading}= useFetchGifs(category);\r\n\r\n\r\n    \r\n    \r\n   \r\n   \r\n  \r\n\r\n    return (\r\n        <>\r\n            <h3 className = 'animate__animated animate__fadeIn'>{category}</h3>\r\n              {loading && <p className= 'animate__animated animate__flash'>Loading</p>}\r\n\r\n           \r\n            <div className='card-grid'>\r\n                \r\n                {\r\n                    images.map (img =>(\r\n                        <GifGridItem \r\n                        key ={img.id}\r\n                        {...img} />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs =(category) => {\r\n\r\n    const [state, setState] =useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n   useEffect(() =>{\r\n\r\n       getGifs (category)\r\n         .then(imgs =>{\r\n   \r\n                setState ({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n\r\n         })\r\n\r\n   },[category])\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    \r\n  const [categories,setCategories ] = useState([ 'One Punch']);\r\n    \r\n  \r\n\r\n    return (\r\n       <div>\r\n         <h2>GifExpertApp</h2>\r\n         <AddCategory setCategories={setCategories}/>\r\n         <hr/>\r\n        \r\n        \r\n         <ol>\r\n             {\r\n                categories.map(category =>(\r\n                  <GifGrid\r\n                   key ={category}\r\n                   category ={category} />\r\n                ))\r\n             }\r\n         </ol>\r\n       </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n \n"],"sourceRoot":""}